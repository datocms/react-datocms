// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StructuredText simple dast /2 with custom mark rules renders the document 1`] = `
<StructuredText
  customMarkRules={
    [
      {
        "appliable": [Function],
        "apply": [Function],
      },
    ]
  }
  data={
    {
      "document": {
        "children": [
          {
            "children": [
              {
                "type": "span",
                "value": "This
is a ",
              },
              {
                "marks": [
                  "strong",
                ],
                "type": "span",
                "value": "title",
              },
            ],
            "level": 1,
            "type": "heading",
          },
        ],
        "type": "root",
      },
      "schema": "dast",
    }
  }
>
  <h1
    key="t-0"
  >
    This
    <br
      key="t-0-br-0"
    />
    is a 
    <b
      key="t-1"
    >
      title
    </b>
  </h1>
</StructuredText>
`;

exports[`StructuredText simple dast /2 with default rules renders the document 1`] = `
<StructuredText
  data={
    {
      "document": {
        "children": [
          {
            "children": [
              {
                "type": "span",
                "value": "This
is a ",
              },
              {
                "marks": [
                  "strong",
                ],
                "type": "span",
                "value": "title",
              },
            ],
            "level": 1,
            "type": "heading",
          },
        ],
        "type": "root",
      },
      "schema": "dast",
    }
  }
>
  <h1
    key="t-0"
  >
    This
    <br
      key="t-0-br-0"
    />
    is a 
    <strong
      key="t-1"
    >
      title
    </strong>
  </h1>
</StructuredText>
`;

exports[`StructuredText simple dast with no links/blocks with custom rules renders the document 1`] = `
<StructuredText
  customNodeRules={
    [
      {
        "appliable": [Function],
        "apply": [Function],
      },
    ]
  }
  data={
    {
      "value": {
        "document": {
          "children": [
            {
              "children": [
                {
                  "type": "span",
                  "value": "This
is a ",
                },
                {
                  "marks": [
                    "strong",
                  ],
                  "type": "span",
                  "value": "title",
                },
              ],
              "level": 1,
              "type": "heading",
            },
          ],
          "type": "root",
        },
        "schema": "dast",
      },
    }
  }
  renderText={[Function]}
>
  <h2
    key="t-0"
  >
    That
    <br
      key="t-0-br-0"
    />
    is a 
    <strong
      key="t-1"
    >
      title
    </strong>
  </h2>
</StructuredText>
`;

exports[`StructuredText simple dast with no links/blocks with default rules renders the document 1`] = `
<StructuredText
  data={
    {
      "value": {
        "document": {
          "children": [
            {
              "children": [
                {
                  "type": "span",
                  "value": "This
is a ",
                },
                {
                  "marks": [
                    "strong",
                  ],
                  "type": "span",
                  "value": "title",
                },
              ],
              "level": 1,
              "type": "heading",
            },
          ],
          "type": "root",
        },
        "schema": "dast",
      },
    }
  }
>
  <h1
    key="t-0"
  >
    This
    <br
      key="t-0-br-0"
    />
    is a 
    <strong
      key="t-1"
    >
      title
    </strong>
  </h1>
</StructuredText>
`;

exports[`StructuredText with links/blocks with default rules renders the document 1`] = `
<StructuredText
  data={
    {
      "blocks": [
        {
          "__typename": "QuoteRecord",
          "author": "Mark Smith",
          "id": "456",
          "quote": "Foo bar.",
        },
      ],
      "inlineBlocks": [
        {
          "__typename": "MentionRecord",
          "id": "789",
          "name": "Jane Doe",
        },
      ],
      "links": [
        {
          "__typename": "DocPageRecord",
          "id": "123",
          "slug": "how-to-code",
          "title": "How to code",
        },
      ],
      "value": {
        "document": {
          "children": [
            {
              "children": [
                {
                  "type": "span",
                  "value": "This is a",
                },
                {
                  "marks": [
                    "highlight",
                  ],
                  "type": "span",
                  "value": "title",
                },
                {
                  "item": "123",
                  "type": "inlineItem",
                },
                {
                  "children": [
                    {
                      "type": "span",
                      "value": "here!",
                    },
                  ],
                  "item": "123",
                  "meta": [
                    {
                      "id": "target",
                      "value": "_blank",
                    },
                  ],
                  "type": "itemLink",
                },
                {
                  "item": "789",
                  "type": "inlineBlock",
                },
              ],
              "level": 1,
              "type": "heading",
            },
            {
              "item": "456",
              "type": "block",
            },
          ],
          "type": "root",
        },
        "schema": "dast",
      },
    }
  }
  renderBlock={[Function]}
  renderInlineBlock={[Function]}
  renderInlineRecord={[Function]}
  renderLinkToRecord={[Function]}
>
  <h1
    key="t-0"
  >
    This is a
    <mark
      key="t-1"
    >
      title
    </mark>
    <a
      href="/docs/how-to-code"
      key="t-2"
    >
      How to code
    </a>
    <a
      href="/docs/how-to-code"
      key="t-3"
      target="_blank"
    >
      here!
    </a>
    <em
      key="t-4"
    >
      Jane Doe
    </em>
  </h1>
  <figure
    key="t-1"
  >
    <blockquote>
      Foo bar.
    </blockquote>
    <figcaption>
      Mark Smith
    </figcaption>
  </figure>
</StructuredText>
`;

exports[`StructuredText with no value renders null 1`] = `
<StructuredText
  data={null}
/>
`;
